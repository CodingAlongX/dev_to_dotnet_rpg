// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dev_to_dotnet_rpg.Data;

namespace dev_to_dotnet_rpg.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("dev_to_dotnet_rpg.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fights")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 15,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 2,
                            Defeats = 0,
                            Defense = 5,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 20,
                            Name = "Raistlin",
                            Strength = 5,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("dev_to_dotnet_rpg.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        });
                });

            modelBuilder.Entity("dev_to_dotnet_rpg.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("dev_to_dotnet_rpg.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 106, 248, 110, 203, 234, 208, 50, 186, 87, 141, 242, 206, 218, 87, 156, 57, 90, 194, 242, 16, 15, 119, 193, 254, 172, 203, 220, 56, 74, 176, 47, 106, 18, 62, 23, 15, 135, 137, 68, 190, 4, 60, 212, 51, 110, 87, 35, 125, 164, 127, 106, 79, 139, 55, 250, 13, 134, 194, 199, 136, 111, 54, 90, 30 },
                            PasswordSalt = new byte[] { 52, 150, 210, 43, 229, 177, 184, 163, 21, 175, 4, 179, 210, 59, 207, 1, 172, 207, 90, 227, 169, 172, 75, 58, 21, 55, 95, 129, 230, 97, 81, 233, 224, 180, 3, 237, 203, 135, 31, 110, 152, 3, 46, 127, 87, 103, 22, 78, 220, 158, 185, 127, 20, 152, 145, 116, 48, 255, 246, 7, 245, 190, 112, 90, 169, 127, 201, 126, 48, 198, 52, 184, 254, 68, 237, 239, 60, 68, 135, 115, 117, 247, 248, 74, 134, 209, 233, 211, 28, 165, 115, 209, 178, 221, 30, 144, 173, 94, 226, 167, 141, 179, 128, 33, 6, 211, 88, 214, 150, 236, 129, 151, 123, 129, 247, 173, 104, 105, 118, 215, 58, 117, 97, 193, 160, 10, 119, 35 },
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 106, 248, 110, 203, 234, 208, 50, 186, 87, 141, 242, 206, 218, 87, 156, 57, 90, 194, 242, 16, 15, 119, 193, 254, 172, 203, 220, 56, 74, 176, 47, 106, 18, 62, 23, 15, 135, 137, 68, 190, 4, 60, 212, 51, 110, 87, 35, 125, 164, 127, 106, 79, 139, 55, 250, 13, 134, 194, 199, 136, 111, 54, 90, 30 },
                            PasswordSalt = new byte[] { 52, 150, 210, 43, 229, 177, 184, 163, 21, 175, 4, 179, 210, 59, 207, 1, 172, 207, 90, 227, 169, 172, 75, 58, 21, 55, 95, 129, 230, 97, 81, 233, 224, 180, 3, 237, 203, 135, 31, 110, 152, 3, 46, 127, 87, 103, 22, 78, 220, 158, 185, 127, 20, 152, 145, 116, 48, 255, 246, 7, 245, 190, 112, 90, 169, 127, 201, 126, 48, 198, 52, 184, 254, 68, 237, 239, 60, 68, 135, 115, 117, 247, 248, 74, 134, 209, 233, 211, 28, 165, 115, 209, 178, 221, 30, 144, 173, 94, 226, 167, 141, 179, 128, 33, 6, 211, 88, 214, 150, 236, 129, 151, 123, 129, 247, 173, 104, 105, 118, 215, 58, 117, 97, 193, 160, 10, 119, 35 },
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("dev_to_dotnet_rpg.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 5,
                            Name = "Crystal Wand"
                        });
                });

            modelBuilder.Entity("dev_to_dotnet_rpg.Models.Character", b =>
                {
                    b.HasOne("dev_to_dotnet_rpg.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("dev_to_dotnet_rpg.Models.CharacterSkill", b =>
                {
                    b.HasOne("dev_to_dotnet_rpg.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dev_to_dotnet_rpg.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("dev_to_dotnet_rpg.Models.Weapon", b =>
                {
                    b.HasOne("dev_to_dotnet_rpg.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("dev_to_dotnet_rpg.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("dev_to_dotnet_rpg.Models.Character", b =>
                {
                    b.Navigation("CharacterSkills");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("dev_to_dotnet_rpg.Models.Skill", b =>
                {
                    b.Navigation("CharacterSkills");
                });

            modelBuilder.Entity("dev_to_dotnet_rpg.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
